// Code generated by lark_sdk_gen. DO NOT EDIT.

package lark

import (
	"context"
)

// EventV2ContactScopeUpdatedV3
//
// 当应用通讯录范围权限发生变更时，订阅这个事件的应用会收到事件
//
// doc: https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/scope/events/updated
func (r *EventCallbackService) HandlerEventV2ContactScopeUpdatedV3(f eventV2ContactScopeUpdatedV3Handler) {
	r.cli.eventHandler.eventV2ContactScopeUpdatedV3Handler = f
}

type eventV2ContactScopeUpdatedV3Handler func(ctx context.Context, cli *Lark, schema string, header *EventHeaderV2, event *EventV2ContactScopeUpdatedV3) (string, error)

type EventV2ContactScopeUpdatedV3 struct {
	Added   *EventV2ContactScopeUpdatedV3Added   `json:"added,omitempty"`   // 当通讯录范围权限变更时，新增的对象
	Removed *EventV2ContactScopeUpdatedV3Removed `json:"removed,omitempty"` // 当通讯录范围权限发生变更时，移除的对象
}

type EventV2ContactScopeUpdatedV3Added struct {
	Departments []*EventV2ContactScopeUpdatedV3AddedDepartment `json:"departments,omitempty"` // 部门对象
	Users       []*EventV2ContactScopeUpdatedV3AddedUser       `json:"users,omitempty"`       // 用户对象
	UserGroups  []*EventV2ContactScopeUpdatedV3AddedUserGroup  `json:"user_groups,omitempty"` // 用户组对象
}

type EventV2ContactScopeUpdatedV3AddedDepartment struct {
	Name               string                                               `json:"name,omitempty"`                 // 部门名称, 最小长度：`1` 字符
	I18nName           *EventV2ContactScopeUpdatedV3AddedDepartmentI18nName `json:"i18n_name,omitempty"`            // 国际化的部门名称
	ParentDepartmentID string                                               `json:"parent_department_id,omitempty"` // 父部门的ID,* 创建根部门，该参数值为 “0”
	DepartmentID       string                                               `json:"department_id,omitempty"`        // 本部门的自定义部门ID, 最大长度：`128` 字符, 正则校验：`^0|[^od][A-Za-z0-9]*`
	OpenDepartmentID   string                                               `json:"open_department_id,omitempty"`   // 部门的open_id
	LeaderUserID       string                                               `json:"leader_user_id,omitempty"`       // 部门主管用户ID
	ChatID             string                                               `json:"chat_id,omitempty"`              // 部门群ID
	Order              string                                               `json:"order,omitempty"`                // 部门的排序，即部门在其同级部门的展示顺序
	UnitIDs            []string                                             `json:"unit_ids,omitempty"`             // 部门单位自定义ID列表，当前只支持一个
	MemberCount        int                                                  `json:"member_count,omitempty"`         // 部门下用户的个数
	Status             *EventV2ContactScopeUpdatedV3AddedDepartmentStatus   `json:"status,omitempty"`               // 部门状态
}

type EventV2ContactScopeUpdatedV3AddedDepartmentI18nName struct {
	ZhCn string `json:"zh_cn,omitempty"` // 部门的中文名
	JaJp string `json:"ja_jp,omitempty"` // 部门的日文名
	EnUs string `json:"en_us,omitempty"` // 部门的英文名
}

type EventV2ContactScopeUpdatedV3AddedDepartmentStatus struct {
	IsDeleted bool `json:"is_deleted,omitempty"` // 是否被删除
}

type EventV2ContactScopeUpdatedV3AddedUser struct {
	UnionID         string                                             `json:"union_id,omitempty"`         // 用户的union_id
	UserID          string                                             `json:"user_id,omitempty"`          // 租户内用户的唯一标识
	OpenID          string                                             `json:"open_id,omitempty"`          // 用户的open_id
	Name            string                                             `json:"name,omitempty"`             // 用户名, 最小长度：`1` 字符
	EnName          string                                             `json:"en_name,omitempty"`          // 英文名
	Email           string                                             `json:"email,omitempty"`            // 邮箱, 字段权限要求:  获取用户邮箱
	Mobile          string                                             `json:"mobile,omitempty"`           // 手机号, 字段权限要求:  获取用户手机号
	Gender          int                                                `json:"gender,omitempty"`           // 性别, 可选值有: `0`：保密, `1`：男, `2`：女
	Avatar          *EventV2ContactScopeUpdatedV3AddedUserAvatar       `json:"avatar,omitempty"`           // 用户头像信息
	Status          *EventV2ContactScopeUpdatedV3AddedUserStatus       `json:"status,omitempty"`           // 用户状态
	LeaderUserID    string                                             `json:"leader_user_id,omitempty"`   // 用户的直接主管的用户ID
	City            string                                             `json:"city,omitempty"`             // 城市
	Country         string                                             `json:"country,omitempty"`          // 国家
	WorkStation     string                                             `json:"work_station,omitempty"`     // 工位
	JoinTime        int                                                `json:"join_time,omitempty"`        // 入职时间
	EmployeeNo      string                                             `json:"employee_no,omitempty"`      // 工号
	EmployeeType    int                                                `json:"employee_type,omitempty"`    // 员工类型, 可选值有: `1`：正式员工, `2`：实习生, `3`：外包, `4`：劳务, `5`：顾问
	CustomAttrs     []*EventV2ContactScopeUpdatedV3AddedUserCustomAttr `json:"custom_attrs,omitempty"`     // 自定义属性
	EnterpriseEmail string                                             `json:"enterprise_email,omitempty"` // 企业邮箱，请先确保已在管理后台启用飞书邮箱服务
}

type EventV2ContactScopeUpdatedV3AddedUserAvatar struct {
	Avatar72     string `json:"avatar_72,omitempty"`     // 72*72像素头像链接
	Avatar240    string `json:"avatar_240,omitempty"`    // 240*240像素头像链接
	Avatar640    string `json:"avatar_640,omitempty"`    // 640*640像素头像链接
	AvatarOrigin string `json:"avatar_origin,omitempty"` // 原始头像链接
}

type EventV2ContactScopeUpdatedV3AddedUserStatus struct {
	IsFrozen    bool `json:"is_frozen,omitempty"`    // 是否冻结
	IsResigned  bool `json:"is_resigned,omitempty"`  // 是否离职
	IsActivated bool `json:"is_activated,omitempty"` // 是否激活
}

type EventV2ContactScopeUpdatedV3AddedUserCustomAttr struct {
	Type  string                                                `json:"type,omitempty"`  // 自定义属性类型
	ID    string                                                `json:"id,omitempty"`    // 自定义属性ID
	Value *EventV2ContactScopeUpdatedV3AddedUserCustomAttrValue `json:"value,omitempty"` // 自定义属性取值
}

type EventV2ContactScopeUpdatedV3AddedUserCustomAttrValue struct {
	Text  string `json:"text,omitempty"`   // 属性文本
	URL   string `json:"url,omitempty"`    // URL
	PcURL string `json:"pc_url,omitempty"` // PC上的URL
}

type EventV2ContactScopeUpdatedV3AddedUserGroup struct {
	UserGroupID string `json:"user_group_id,omitempty"` // 用户组的自定义ID, 长度范围：`1` ～ `64` 字符
	Name        string `json:"name,omitempty"`          // 用户组的名称, 长度范围：`1` ～ `100` 字符
	Type        int    `json:"type,omitempty"`          // 用户组的类型, 可选值有: `1`：普通用户组, `2`：动态用户组
	MemberCount int    `json:"member_count,omitempty"`  // 成员数量
	Status      int    `json:"status,omitempty"`        // 用户组状态, 可选值有: `0`：未知, `1`：计算完毕, `2`：计算中, `3`：计算失败
}

type EventV2ContactScopeUpdatedV3Removed struct {
	Departments []*EventV2ContactScopeUpdatedV3RemovedDepartment `json:"departments,omitempty"` // 部门对象
	Users       []*EventV2ContactScopeUpdatedV3RemovedUser       `json:"users,omitempty"`       // 用户对象
	UserGroups  []*EventV2ContactScopeUpdatedV3RemovedUserGroup  `json:"user_groups,omitempty"` // 用户组对象
}

type EventV2ContactScopeUpdatedV3RemovedDepartment struct {
	Name               string                                                 `json:"name,omitempty"`                 // 部门名称, 最小长度：`1` 字符
	I18nName           *EventV2ContactScopeUpdatedV3RemovedDepartmentI18nName `json:"i18n_name,omitempty"`            // 国际化的部门名称
	ParentDepartmentID string                                                 `json:"parent_department_id,omitempty"` // 父部门的ID,* 创建根部门，该参数值为 “0”
	DepartmentID       string                                                 `json:"department_id,omitempty"`        // 本部门的自定义部门ID, 最大长度：`128` 字符, 正则校验：`^0|[^od][A-Za-z0-9]*`
	OpenDepartmentID   string                                                 `json:"open_department_id,omitempty"`   // 部门的open_id
	LeaderUserID       string                                                 `json:"leader_user_id,omitempty"`       // 部门主管用户ID
	ChatID             string                                                 `json:"chat_id,omitempty"`              // 部门群ID
	Order              string                                                 `json:"order,omitempty"`                // 部门的排序，即部门在其同级部门的展示顺序
	UnitIDs            []string                                               `json:"unit_ids,omitempty"`             // 部门单位自定义ID列表，当前只支持一个
	MemberCount        int                                                    `json:"member_count,omitempty"`         // 部门下用户的个数
	Status             *EventV2ContactScopeUpdatedV3RemovedDepartmentStatus   `json:"status,omitempty"`               // 部门状态
}

type EventV2ContactScopeUpdatedV3RemovedDepartmentI18nName struct {
	ZhCn string `json:"zh_cn,omitempty"` // 部门的中文名
	JaJp string `json:"ja_jp,omitempty"` // 部门的日文名
	EnUs string `json:"en_us,omitempty"` // 部门的英文名
}

type EventV2ContactScopeUpdatedV3RemovedDepartmentStatus struct {
	IsDeleted bool `json:"is_deleted,omitempty"` // 是否被删除
}

type EventV2ContactScopeUpdatedV3RemovedUser struct {
	UnionID         string                                               `json:"union_id,omitempty"`         // 用户的union_id
	UserID          string                                               `json:"user_id,omitempty"`          // 租户内用户的唯一标识
	OpenID          string                                               `json:"open_id,omitempty"`          // 用户的open_id
	Name            string                                               `json:"name,omitempty"`             // 用户名, 最小长度：`1` 字符
	EnName          string                                               `json:"en_name,omitempty"`          // 英文名
	Email           string                                               `json:"email,omitempty"`            // 邮箱, 字段权限要求:  获取用户邮箱
	Mobile          string                                               `json:"mobile,omitempty"`           // 手机号, 字段权限要求:  获取用户手机号
	Gender          int                                                  `json:"gender,omitempty"`           // 性别, 可选值有: `0`：保密, `1`：男, `2`：女
	Avatar          *EventV2ContactScopeUpdatedV3RemovedUserAvatar       `json:"avatar,omitempty"`           // 用户头像信息
	Status          *EventV2ContactScopeUpdatedV3RemovedUserStatus       `json:"status,omitempty"`           // 用户状态
	LeaderUserID    string                                               `json:"leader_user_id,omitempty"`   // 用户的直接主管的用户ID
	City            string                                               `json:"city,omitempty"`             // 城市
	Country         string                                               `json:"country,omitempty"`          // 国家
	WorkStation     string                                               `json:"work_station,omitempty"`     // 工位
	JoinTime        int                                                  `json:"join_time,omitempty"`        // 入职时间
	EmployeeNo      string                                               `json:"employee_no,omitempty"`      // 工号
	EmployeeType    int                                                  `json:"employee_type,omitempty"`    // 员工类型, 可选值有: `1`：正式员工, `2`：实习生, `3`：外包, `4`：劳务, `5`：顾问
	CustomAttrs     []*EventV2ContactScopeUpdatedV3RemovedUserCustomAttr `json:"custom_attrs,omitempty"`     // 自定义属性
	EnterpriseEmail string                                               `json:"enterprise_email,omitempty"` // 企业邮箱，请先确保已在管理后台启用飞书邮箱服务
}

type EventV2ContactScopeUpdatedV3RemovedUserAvatar struct {
	Avatar72     string `json:"avatar_72,omitempty"`     // 72*72像素头像链接
	Avatar240    string `json:"avatar_240,omitempty"`    // 240*240像素头像链接
	Avatar640    string `json:"avatar_640,omitempty"`    // 640*640像素头像链接
	AvatarOrigin string `json:"avatar_origin,omitempty"` // 原始头像链接
}

type EventV2ContactScopeUpdatedV3RemovedUserStatus struct {
	IsFrozen    bool `json:"is_frozen,omitempty"`    // 是否冻结
	IsResigned  bool `json:"is_resigned,omitempty"`  // 是否离职
	IsActivated bool `json:"is_activated,omitempty"` // 是否激活
}

type EventV2ContactScopeUpdatedV3RemovedUserCustomAttr struct {
	Type  string                                                  `json:"type,omitempty"`  // 自定义属性类型
	ID    string                                                  `json:"id,omitempty"`    // 自定义属性ID
	Value *EventV2ContactScopeUpdatedV3RemovedUserCustomAttrValue `json:"value,omitempty"` // 自定义属性取值
}

type EventV2ContactScopeUpdatedV3RemovedUserCustomAttrValue struct {
	Text  string `json:"text,omitempty"`   // 属性文本
	URL   string `json:"url,omitempty"`    // URL
	PcURL string `json:"pc_url,omitempty"` // PC上的URL
}

type EventV2ContactScopeUpdatedV3RemovedUserGroup struct {
	UserGroupID string `json:"user_group_id,omitempty"` // 用户组的自定义ID, 长度范围：`1` ～ `64` 字符
	Name        string `json:"name,omitempty"`          // 用户组的名称, 长度范围：`1` ～ `100` 字符
	Type        int    `json:"type,omitempty"`          // 用户组的类型, 可选值有: `1`：普通用户组, `2`：动态用户组
	MemberCount int    `json:"member_count,omitempty"`  // 成员数量
	Status      int    `json:"status,omitempty"`        // 用户组状态, 可选值有: `0`：未知, `1`：计算完毕, `2`：计算中, `3`：计算失败
}
