// Code generated by lark_sdk_gen. DO NOT EDIT.

package lark

import (
	"context"
)

// CreateCategory 该接口用于创建知识库分类。
//
// doc: https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/category/create
func (r *HelpdeskService) CreateCategory(ctx context.Context, request *CreateCategoryReq, options ...MethodOptionFunc) (*CreateCategoryResp, *Response, error) {
	if r.cli.mock.mockHelpdeskCreateCategory != nil {
		r.cli.log(ctx, LogLevelDebug, "[lark] Helpdesk#CreateCategory mock enable")
		return r.cli.mock.mockHelpdeskCreateCategory(ctx, request, options...)
	}

	r.cli.log(ctx, LogLevelInfo, "[lark] Helpdesk#CreateCategory call api")
	r.cli.log(ctx, LogLevelDebug, "[lark] Helpdesk#CreateCategory request: %s", jsonString(request))

	req := &RawRequestReq{
		Method:       "POST",
		URL:          "https://open.feishu.cn/open-apis/helpdesk/v1/categories",
		Body:         request,
		MethodOption: newMethodOption(options),

		NeedUserAccessToken: true,
		NeedHelpdeskAuth:    true,
	}
	resp := new(createCategoryResp)

	response, err := r.cli.RawRequest(ctx, req, resp)
	requestID, statusCode := getResponseRequestID(response)
	if err != nil {
		r.cli.log(ctx, LogLevelError, "[lark] Helpdesk#CreateCategory POST https://open.feishu.cn/open-apis/helpdesk/v1/categories failed, request_id: %s, status_code: %d, error: %s", requestID, statusCode, err)
		return nil, response, err
	} else if resp.Code != 0 {
		r.cli.log(ctx, LogLevelError, "[lark] Helpdesk#CreateCategory POST https://open.feishu.cn/open-apis/helpdesk/v1/categories failed, request_id: %s, status_code: %d, code: %d, msg: %s", requestID, statusCode, resp.Code, resp.Msg)
		return nil, response, NewError("Helpdesk", "CreateCategory", resp.Code, resp.Msg)
	}

	r.cli.log(ctx, LogLevelDebug, "[lark] Helpdesk#CreateCategory success, request_id: %s, status_code: %d, response: %s", requestID, statusCode, jsonString(resp.Data))

	return resp.Data, response, nil
}

func (r *Mock) MockHelpdeskCreateCategory(f func(ctx context.Context, request *CreateCategoryReq, options ...MethodOptionFunc) (*CreateCategoryResp, *Response, error)) {
	r.mockHelpdeskCreateCategory = f
}

func (r *Mock) UnMockHelpdeskCreateCategory() {
	r.mockHelpdeskCreateCategory = nil
}

type CreateCategoryReq struct {
	Name     string  `json:"name,omitempty"`      // 名称, 示例值："创建团队和邀请成员"
	ParentID string  `json:"parent_id,omitempty"` // 父知识库分类ID, 示例值："0"
	Language *string `json:"language,omitempty"`  // 语言, 示例值："zh_cn"
}

type createCategoryResp struct {
	Code int                 `json:"code,omitempty"` // 错误码，非 0 表示失败
	Msg  string              `json:"msg,omitempty"`  // 错误描述
	Data *CreateCategoryResp `json:"data,omitempty"` //
}

type CreateCategoryResp struct {
	Category *HelpdeskCategory `json:"category,omitempty"` // 知识库分类
}
