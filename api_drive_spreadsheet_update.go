// Code generated by lark_sdk_gen. DO NOT EDIT.
/**
 * Copyright 2022 chyroc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package lark

import (
	"context"
)

// UpdateSpreadsheet 该接口用于修改电子表格的属性
//
// doc: https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet/patch
func (r *DriveService) UpdateSpreadsheet(ctx context.Context, request *UpdateSpreadsheetReq, options ...MethodOptionFunc) (*UpdateSpreadsheetResp, *Response, error) {
	if r.cli.mock.mockDriveUpdateSpreadsheet != nil {
		r.cli.log(ctx, LogLevelDebug, "[lark] Drive#UpdateSpreadsheet mock enable")
		return r.cli.mock.mockDriveUpdateSpreadsheet(ctx, request, options...)
	}

	req := &RawRequestReq{
		Scope:                 "Drive",
		API:                   "UpdateSpreadsheet",
		Method:                "PATCH",
		URL:                   r.cli.openBaseURL + "/open-apis/sheets/v3/spreadsheets/:spreadsheet_token",
		Body:                  request,
		MethodOption:          newMethodOption(options),
		NeedTenantAccessToken: true,
		NeedUserAccessToken:   true,
	}
	resp := new(updateSpreadsheetResp)

	response, err := r.cli.RawRequest(ctx, req, resp)
	return resp.Data, response, err
}

// MockDriveUpdateSpreadsheet mock DriveUpdateSpreadsheet method
func (r *Mock) MockDriveUpdateSpreadsheet(f func(ctx context.Context, request *UpdateSpreadsheetReq, options ...MethodOptionFunc) (*UpdateSpreadsheetResp, *Response, error)) {
	r.mockDriveUpdateSpreadsheet = f
}

// UnMockDriveUpdateSpreadsheet un-mock DriveUpdateSpreadsheet method
func (r *Mock) UnMockDriveUpdateSpreadsheet() {
	r.mockDriveUpdateSpreadsheet = nil
}

// UpdateSpreadsheetReq ...
type UpdateSpreadsheetReq struct {
	SpreadSheetToken string  `path:"spreadsheet_token" json:"-"` // 表格的token, 示例值: "shtxxxxxxxxxxxxxxx"
	Title            *string `json:"title,omitempty"`            // 表格标题, 示例值: "title"
}

// UpdateSpreadsheetResp ...
type UpdateSpreadsheetResp struct {
}

// updateSpreadsheetResp ...
type updateSpreadsheetResp struct {
	Code int64                  `json:"code,omitempty"` // 错误码, 非 0 表示失败
	Msg  string                 `json:"msg,omitempty"`  // 错误描述
	Data *UpdateSpreadsheetResp `json:"data,omitempty"`
}
