// Code generated by lark_sdk_gen. DO NOT EDIT.

package lark

import (
	"context"
)

// GetDistrictList 新建建筑时需要选择所处国家/地区，该接口用于获得系统预先提供的可供选择的城市列表。
//
// doc: https://open.feishu.cn/document/ukTMukTMukTM/uUTNwYjL1UDM24SN1AjN
func (r *MeetingRoomService) GetDistrictList(ctx context.Context, request *GetDistrictListReq, options ...MethodOptionFunc) (*GetDistrictListResp, *Response, error) {
	if r.cli.mock.mockMeetingRoomGetDistrictList != nil {
		r.cli.log(ctx, LogLevelDebug, "[lark] MeetingRoom#GetDistrictList mock enable")
		return r.cli.mock.mockMeetingRoomGetDistrictList(ctx, request, options...)
	}

	r.cli.log(ctx, LogLevelInfo, "[lark] MeetingRoom#GetDistrictList call api")
	r.cli.log(ctx, LogLevelDebug, "[lark] MeetingRoom#GetDistrictList request: %s", jsonString(request))

	req := &RawRequestReq{
		Method:                "GET",
		URL:                   "https://open.feishu.cn/open-apis/meeting_room/district/list?country_id=1814991",
		Body:                  request,
		MethodOption:          newMethodOption(options),
		NeedTenantAccessToken: true,
	}
	resp := new(getDistrictListResp)

	response, err := r.cli.RawRequest(ctx, req, resp)
	requestID, statusCode := getResponseRequestID(response)
	if err != nil {
		r.cli.log(ctx, LogLevelError, "[lark] MeetingRoom#GetDistrictList GET https://open.feishu.cn/open-apis/meeting_room/district/list?country_id=1814991 failed, request_id: %s, status_code: %d, error: %s", requestID, statusCode, err)
		return nil, response, err
	} else if resp.Code != 0 {
		r.cli.log(ctx, LogLevelError, "[lark] MeetingRoom#GetDistrictList GET https://open.feishu.cn/open-apis/meeting_room/district/list?country_id=1814991 failed, request_id: %s, status_code: %d, code: %d, msg: %s", requestID, statusCode, resp.Code, resp.Msg)
		return nil, response, NewError("MeetingRoom", "GetDistrictList", resp.Code, resp.Msg)
	}

	r.cli.log(ctx, LogLevelDebug, "[lark] MeetingRoom#GetDistrictList success, request_id: %s, status_code: %d, response: %s", requestID, statusCode, jsonString(resp.Data))

	return resp.Data, response, nil
}

func (r *Mock) MockMeetingRoomGetDistrictList(f func(ctx context.Context, request *GetDistrictListReq, options ...MethodOptionFunc) (*GetDistrictListResp, *Response, error)) {
	r.mockMeetingRoomGetDistrictList = f
}

func (r *Mock) UnMockMeetingRoomGetDistrictList() {
	r.mockMeetingRoomGetDistrictList = nil
}

type GetDistrictListReq struct {
	CountryID int `query:"country_id" json:"-"` // 国家地区ID
}

type getDistrictListResp struct {
	Code int                  `json:"code,omitempty"` // 返回码，非 0 表示失败
	Msg  string               `json:"msg,omitempty"`  // 返回码的描述，"success" 表示成功，其他为错误提示信息
	Data *GetDistrictListResp `json:"data,omitempty"` // 返回业务信息
}

type GetDistrictListResp struct {
	Districts *GetDistrictListRespDistricts `json:"districts,omitempty"` // 城市列表
}

type GetDistrictListRespDistricts struct {
	DistrictID string `json:"district_id,omitempty"` // 城市ID
	Name       string `json:"name,omitempty"`        // 城市名称
}
